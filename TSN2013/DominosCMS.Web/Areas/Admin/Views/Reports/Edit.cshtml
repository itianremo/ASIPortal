@model DominosCMS.Models.Report

@{
    ViewBag.Title = "Edit";
}

@section header {

    @Html.Css("themes/base/jquery.ui.all.css")
    @Html.Css(Url.Content("~/_static/js/lib/uploadfy/uploadify.css"), true)
    @Html.Css("forms.css")
    @Html.Css("productManager.css")
    


    }
@section scripts {
    @Html.Script("jquery.validate.min.js")
    @Html.Script("jquery.validate.unobtrusive.min.js")
}

@section actions {
    
    <div class="actions-toolbar">
        <ul>
            <li>
                <a href="@Url.Action("Index")" title="Back to Reports">
                    Back to Reports
                </a>
            </li>
        </ul>
    </div>
    <div class="actions-title">
        <h2>Edit report</h2>
    </div>
        
}


@using (Html.BeginForm("Edit", "Reports", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Report</legend>

        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.Filename)
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GroupName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GroupName)
            @Html.ValidationMessageFor(model => model.GroupName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ViewOrder)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ViewOrder)
            @Html.ValidationMessageFor(model => model.ViewOrder)
        </div>
        <div class="editor-label">
            Report file (PDF only) 
        </div>
        <div class="editor-field">
            
            <input type="file" name="file1" id="file1" />
            @Html.ValidationMessageFor(model => model.Filename)
           
            @Html.ActionLink(Model.Filename, "Download", new { id = Model.ID }, new { target="_blank"})
        </div>

        <div class="editor-field">
            @Html.EditorFor(model => model.Published)
            @Html.LabelFor(model => model.Published)
        </div>

        <p>
            <input type="submit" value="Save report" />
        </p>
    </fieldset>
}