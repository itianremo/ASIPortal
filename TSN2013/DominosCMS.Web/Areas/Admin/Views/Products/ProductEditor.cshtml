@model DominosCMS.Models.Product

@{
    ViewBag.Title = "Product Editor";

    var pro_image = "/_static/images/gallery.png";
    var pro_image2 = "/_static/images/gallery.png";
    var pro_id = (Model == null) ? 0 : Model.ID;

    var list = ViewBag.Categories as IList<DominosCMS.Models.ProductCategory>;
    
    var selectList = new SelectList(list, "ID", "Title", (Model == null || Model.Category == null) ? "" : Model.Category.ID.ToString());

    if (Model != null && !string.IsNullOrEmpty(Model.Photo))
    {
        pro_image = Model.Photo;
    }
    if (Model != null && !string.IsNullOrEmpty(Model.Photo2))
    {
        pro_image2 = Model.Photo2;
    }

    var types = new Dictionary<string, string>();
    types.Add("c", "Connection");
    types.Add("m", "Member");
}

@section header {

    @Html.Css("themes/base/jquery.ui.all.css")
    @Html.Css(Url.Content("~/_static/js/lib/uploadfy/uploadify.css"), true)
    @Html.Css("forms.css")
    @Html.Css("productManager.css")
}
@section scripts {
    @Html.Script("productManager.js")
    @Html.Script("jquery-ui-1.8.11.min.js")
    @Html.Script("jquery.unobtrusive-ajax.min.js")
    @Html.Script("jquery.validate.min.js")
    @Html.Script("jquery.validate.unobtrusive.min.js")
    @Html.Script("tiny_mce/jquery.tinymce.js")
    @Html.Script("lib/uploadfy/jquery.uploadify-3.1.min.js")
}

@section actions {
    
    <div class="actions-title">
        <h2>@Html.ActionLink("Products", "Index", "Products") > 
            @if (Model == null) {
                @: New Product
            }
            else {
                @Model.Title 
            }
                
                </h2>
    </div>
        
}



    @Html.Hidden("pro_id", pro_id)
    @Html.Hidden("FindSpecsUrl", @Url.Action("FindSpecs", new { id = pro_id}))
    @Html.Hidden("FindFilesUrl", @Url.Action("FindFiles", new { id = pro_id}))
    @Html.Hidden("SectionsListUrl", @Url.Action("Sections", new { id = pro_id}))


<div id="tabs">
  <ul>
    <li><a href="#product">Product</a></li>
    <li><a href="#Specifications" title="Add product specifications (this will appear as tabs)">Tabs</a></li>
    <li><a href="#Files" title="Add product related files (PDF, DWG and Zip)">Files</a></li>
@*    <li><a href="#TechProp" title="">Tech. Properties</a></li>
    <li><a href="#Sections" title="">Sections</a></li>
    <li><a href="#notes" title="">Notes</a></li>*@
  </ul>
    
  <div id="product">
      @using (Html.BeginForm())
      {
    @Html.ValidationSummary(true)

      <div id="productPhoto">
          <fieldset>

              <legend>Photo 1</legend>

              <img src="@pro_image" style="max-height: 200px; max-width: 200px"  id="productImage" /><br />
              <div style="margin-top: 15px;">
              <input type="file" name="file_upload" id="file_upload" />
               @if (Model != null) {
                 <a href="@Url.Action("DeletePhoto", new { id = Model.ID })" data-photo="photo1" class="delete-photo">Delete Photo</a>
               }
               </div>
              @Html.HiddenFor(model => model.Photo) 

              
          </fieldset>
          <fieldset>

              <legend>Photo 2</legend>

              <img src="@pro_image2" style="max-height: 200px; max-width: 200px"  id="productImage2" /><br />
              <div style="margin-top: 15px;">
              <input type="file" name="file_upload2" id="file_upload2" />
              @if (Model != null) {
                  <a href="@Url.Action("DeletePhoto", new { id = Model.ID })" data-photo="photo2" class="delete-photo">Delete Photo</a>
              }
               </div>
              
              @Html.HiddenFor(model => model.Photo2)
          </fieldset>

      </div>  
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.URL)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.URL)
            @Html.ValidationMessageFor(model => model.URL)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Nomenclature)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Nomenclature)
            @Html.ValidationMessageFor(model => model.Nomenclature)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Category)
        </div>
        <div class="editor-field">
            @Html.DropDownList("productCat", selectList, "Select category")
            @Html.ValidationMessageFor(model => model.Category)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description) <span>(Clip Description)</span>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            Function
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShortDesc)
            @Html.ValidationMessageFor(model => model.ShortDesc)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Keywords)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Keywords)
            @Html.ValidationMessageFor(model => model.Keywords)
        </div>

        <div class="editor-label">
            Product Type
        </div>
        <div class="editor-field">
            <lable>@Html.RadioButtonFor(model => model.Type, "m") Member</lable>
            <lable>@Html.RadioButtonFor(model => model.Type, "c") Connection</lable>
            <lable>@Html.RadioButtonFor(model => model.Type, "x") Other</lable>
        </div>

        <div class="editor-label">
            @Html.EditorFor(model => model.Visible) @Html.LabelFor(model => model.Visible)
        </div>
          <div class="clear"></div>

       <div class="editor-label">
            @Html.LabelFor(model => model.Content)
        </div>
        <div class="editor-field  rte-fullfeature">
            @Html.EditorFor(model => model.Content)
            @Html.ValidationMessageFor(model => model.Content)
        </div>

      <input type="Submit" value="Save Product" />
      <button value="Cancel" id="btnCancel">Cancel</button>
      }

  </div>
  <div id="Specifications">
      @{ Html.RenderPartial("_ProductSpecs", Model); }
  </div>
  <div id="Files">
      @{ Html.RenderPartial("_ProductFiles", Model); }
  </div>
@*  <div id="TechProp">

      @{ Html.RenderPartial("_ProductTechProp", Model); }
  </div>
  <div id="Sections">
  
      @{ Html.RenderPartial("_ProductSections", Model); }
  </div>

    <div id="notes">
        @{ Html.RenderPartial("_Notes", Model); }
    </div>*@
</div>

