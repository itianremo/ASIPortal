@model DominosCMS.Models.CustomProduct

@{
    ViewBag.Title = "Add Custom Product";
    
    var members = ViewBag.Members as IList<DominosCMS.Models.Account>;
    var types = ViewBag.Types as IList<string>;
    var products = ViewBag.Products as SelectList;
}
@section header {
    @Html.Css("themes/base/jquery.ui.all.css")

    @Html.Script("jquery-ui-1.8.11.min.js")
    <script type="text/javascript">

        $(function () {
            $(".datepicker input").datepicker({
                showOn: "button",
                buttonImage: "/_static/images/icons/calendar.gif",
                buttonImageOnly: true
            });

            $("#Type").change(function () {
                //load the products by selected type

                $.get("@Url.Action("GetJsonProducts")", { type: $(this).val()}, function (data) {
                    if (data)
                    {
                        $("#pLine").empty();
                        $("#pLine").append("<option value=''>Select Product</option>");

                        $.each(data["Result"], function (i, val) {
                            $('#pLine').append('<option value="' + val.ID + '">' + val.Name + '</option>');
                        });
                    }
                    
                }, "json");
            });

        });

    </script>
    <style type="text/css">

        .datepicker input
        {
            width: auto;
        }
    </style>

}


<h2>Add Custom Products</h2>

@using (Html.BeginForm("AddCustom", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Custom Product</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Type) <span class="spinner"></span>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Type, new SelectList(types)) 
            @Html.ValidationMessageFor(model => model.Type)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ProductLine)
        </div>
        <div class="editor-field">
            @Html.DropDownList("pLine", products, "Select Product")
            @Html.ValidationMessage("pLine")
        </div>

        <div class="editor-label">
            Product
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Expires)
        </div>
        <div class="editor-field datepicker">
            @Html.EditorFor(model => model.Expires)
            @Html.ValidationMessageFor(model => model.Expires)
        </div>

        <div class="editor-label">
            Tech Sheet
        </div>
        <div class="editor-field">
            <input type="file" name="file1" id="file1" />
            @Html.ValidationMessageFor(model => model.Filename)
        </div>
        <div class="editor-label">
            Drawing
        </div>
        <div class="editor-field">
            <input type="file" name="file2" id="file2" />
            @Html.ValidationMessageFor(model => model.DrawingFile)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
